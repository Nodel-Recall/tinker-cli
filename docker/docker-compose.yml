version: "3"
networks:
  caddy:
services:
  ################
  # postgrest-db #
  ################
  postgrest-db:
    container_name: postgrest-db
    image: lu19ca78/pgjwt:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: tinker
      POSTGRES_USER: tinker
      POSTGRES_PASSWORD: password
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    # https://github.com/hasura/graphql-engine/issues/3737#issuecomment-575758127
    command: postgres -c 'app.jwt_secret=${PGRST_JWT_SECRET}'
    networks:
      - caddy
  ##################
  # postgrest-demo #
  ##################
  postgrest-demo:
    container_name: caddy
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # anything in html directory is hosted via nginx
      - "./build:/usr/share/caddy/build"
      - "./site/Caddyfile:/etc/caddy/Caddyfile"
    restart: always
    environment:
      - CADDY_OPTIONS=--global-option debug
    depends_on:
      - postgrest
    networks:
      - caddy

  #############
  # postgrest #
  #############
  server:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://authenticator:password@postgrest-db:5432/tinker
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: anon
      JWT_SECRET_IS_BASE64: false
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
    depends_on:
      - postgrest-db
    networks:
      - caddy
